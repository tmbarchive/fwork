TODO:

-- OpenMP matrix multiplication
-- first: script-based parameter optimization
-- loading and saving
-- bound procedure version? (probably not)

-- sequential training interface
   -- hvq all in Fortran, trivial interface (train, train_and_classify)
   -- internal stages
      -- nnbr <nclasses*100
      -- nnet <100k
      -- hierarchical
   -- log randomized training parameters with ninput, nclasses, kNN curve, ...
   -- interface
      -- init(model,ninput,nclasses)
      -- classify(model,vector) -> posterior
      -- train(model,vector,class) -> none
      -- save(model,file,discard)
      -- load(model,file)

-- separate simple density estimation via one or two levels of k-means

-- performance of hierarchical nearest neighbor

-- feature extraction...

================================================================

-- label errors and kNN?

-- select per-class k-means instead of nearest neighbor
   -- maybe with a little RBF
   -- for small datasets

-- later:
   -- train invariances by example "all these samples are related"
   -- learn restricted classes of linear transformations
   -- pick representatives
   -- match with maximum likelihood against representatives

-- automatic training/learning of parameter settings for problem classes with randomization
-- "50% prim" for parameter settings
-- write network, read network

-- Python writef0, writef1, writef2, writef3, readf0, readf1, ...

-- different feature extraction
-- different nearest neighbor techniques
-- Rocchio
-- RBF?

-- combination techniques
   -- hvq-classification
   -- bootstrap
   -- boosting

-- later
   -- cascade correlation


# mlp stuff
# opt = " -g -O4 -fbounds-check"
# 20s
# opt = " -O4 -finline"
# 13s
# opt = " -O4"
# 13s
# ---
# opt = " -fopenmp -O4"
# 13s (no directives)
# 41s (maximum parallel workshare)
# 7s (parallel do for training, update not critical)
# 11s (parallel do for training, update critical)
# ---
# ifort -O4: 11s
# ifort -O4, parallel do training, update not critical: 5s
# fc="/opt/intel/fc/10.1.018/bin/ifort"

   